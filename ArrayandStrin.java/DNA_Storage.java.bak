/* For encoding an even-length binary string into a sequence of A, T, C, and G, we iterate from left to right 
   and replace the characters as follows:
   1.00 is replaced with A
   2.01 is replaced with T
   3.10 is replaced with C
   4.11 is replaced with G
   Given a binary string S of length (N is even), find the encoded sequence. */
 
import java.util.Scanner;
class Encoding
{ 
    int n;
	String str;
	class String  Binaryreplaced(int n,String str)
	{
		this.n=n;
		this.str=str;
	}
}
class Replaced extends Encoding
{
	public String Replaced(int n,String str)
	{
		String result="";
		
		for(int i=0;i<n;i+=2)
		{
			if(str.charAt(i)=='0' && str.charAt(i+1)=='0')
			{
				return result+="A";
			}
			else if(str.charAt(i)=='0' && str.charAt(i+1)=='1')
			{
				return result+="T";
			}
			else if(str.charAt(i)=='1' && str.charAt(i+1)=='0')
			{
				return result+="C";
			}
			else 
			{
				return result+="T";
			}
		}
		return result;
	}
}
class Sequence extends Replaced
{
	@Override
	public string Sequence(int n,int str)
	{
		return super.Replaced(n,str);
	}
}
public class DNA_Storage
{
	public static void main(String[]args)
	{
		Scanner in=new Scanner(System.in);
		System.out.println("Enter the first number:");
		int n=in.nextInt();
		System.out.println("Enter the second number:");
		String str=in.next();
		
		Sequence s=new Sequence();
		String res=s.Encoding(n,str)
		System.out.println("A binary string S of length N is even"+res);
	}
}